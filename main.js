/* global brackets*/
define(function (require, exports, module) {
    var AppInit = brackets.getModule("utils/AppInit")
        , CodeMirror = brackets.getModule("thirdparty/CodeMirror/lib/codemirror")
        , CodeHintManager = brackets.getModule("editor/CodeHintManager")
        , LanguageManager = brackets.getModule("language/LanguageManager")
        , Dialogs = brackets.getModule("widgets/Dialogs")
        , EditorManager = brackets.getModule("editor/EditorManager")
        , ExtensionUtils = brackets.getModule("utils/ExtensionUtils")
        , NodeDomain = brackets.getModule("utils/NodeDomain")
        , FileUtils = brackets.getModule("file/FileUtils")
        , DefaultDialogs = brackets.getModule("widgets/DefaultDialogs")
        , nxcKeywords = require("text!nxckeywords.txt");
    var runDialogHTML = require("text!rundialog.html");
    var errorDialogHTML = require("text!errordialog.html");
    var extensionFolder = ExtensionUtils.getModulePath(module);
    //var extensionFolder = extensionPath.substring(0, extensionPath.lastIndexOf("/") - 1);
    var domainPath = extensionFolder + "domain";
    var execCmdDomain = new NodeDomain("brackets-nxc-domain1", ExtensionUtils.getModulePath(module, "node/domain"));
    var checkFileDomain = new NodeDomain("brackets-nxc-domain2", ExtensionUtils.getModulePath(module, "node/domain2"));
    CodeMirror.defineSimpleMode("nxc", {
        // The start state contains the rules that are intially used
        start: [
    // The regex matches the token, the token property contains the type
            {
                regex: /"(?:[^\\]|\\.)*?(?:"|$)/
                , token: "string"
        }
    //, // You can match multiple tokens at once. Note that the captured
    // groups must span the whole string in this case
        /*{
            regex: /(function)(\s+)([a-z$][\w$]*)/
            , token: ["keyword", null, "variable-2"]
        }*/
    , // Rules are matched in the order in which they appear, so there is
    // no ambiguity between this one and the one above
            {
                regex: /true|false|null|undefined/
                , token: "atom"
        }
        , {
                regex: /0x[a-f\d]+|[-+]?(?:\.\d+|\d+\.?\d*)(?:e[-+]?\d+)?/i
                , token: "number"
        }
        , {
                regex: /\/\/.*/
                , token: "comment"
        }
        , {
                regex: /\/(?:[^\\]|\\.)*?\//
                , token: "variable-3"
        }, {
                regex: /(?:#define|#download|#elif|#else|#endif|#if|#ifdef|#ifndef|#import|#include|ACCLNxCalibrateX|ACCLNxCalibrateXEnd|ACCLNxCalibrateY|ACCLNxCalibrateYEnd|ACCLNxCalibrateZ|ACCLNxCalibrateZEnd|ACCLNxResetCalibration|ACCLNxSensitivity|ACCLNxXOffset|ACCLNxXRange|ACCLNxYOffset|ACCLNxYRange|ACCLNxZOffset|ACCLNxZRange|AbortFlag|Acos|AcosD|Acquire|ActualSpeedField|ArrayBuild|ArrayInit|ArrayLen|ArrayMax|ArrayMean|ArrayMin|ArrayOp|ArraySort|ArrayStd|ArraySubset|ArraySum|ArraySumSqr|Asin|AsinD|Atan|Atan2|Atan2D|AtanD|BTConnectionClass|BTConnectionHandleNum|BTConnectionLinkQuality|BTConnectionName|BTConnectionPinCode|BTConnectionStreamStatus|BTDataMode|BTDeviceClass|BTDeviceCount|BTDeviceName|BTDeviceNameCount|BTDeviceStatus|BTInputBufferInPtr|BTInputBufferOutPtr|BTOutputBufferInPtr|BTOutputBufferOutPtr|BatteryLevel|BatteryState|BlockTachoCountField|BluetoothState|BluetoothStatus|BluetoothWrite|BrickDataBluecoreVersion|BrickDataBtHardwareStatus|BrickDataBtStateStatus|BrickDataName|BrickDataTimeoutValue|ButtonCount|ButtonLongPressCount|ButtonLongReleaseCount|ButtonModuleID|ButtonModuleName|ButtonOffsetLongPressCnt|ButtonOffsetLongRelCnt|ButtonOffsetPressedCnt|ButtonOffsetRelCnt|ButtonOffsetShortRelCnt|ButtonOffsetState|ButtonPressCount|ButtonPressed|ButtonReleaseCount|ButtonShortReleaseCount|ButtonState|ByteArrayToStr|ByteArrayToStrEx|Ceil|CircleOut|ClearLine|ClearScreen|ClearSensor|CloseFile|Coast|CoastEx|ColorADRaw|ColorBoolean|ColorCalLimits|ColorCalibration|ColorCalibrationState|ColorSensorRaw|ColorSensorRead|ColorSensorValue|CommBTCheckStatus|CommBTConnection|CommBTOnOff|CommBTRead|CommBTWrite|CommExecuteFunction|CommHSCheckStatus|CommHSControl|CommHSRead|CommHSWrite|CommLSCheckStatus|CommLSRead|CommLSWrite|CommLSWriteEx|CommModuleID|CommModuleName|CommOffsetBrickDataBdAddr|CommOffsetBrickDataBluecoreVersion|CommOffsetBrickDataBtHwStatus|CommOffsetBrickDataBtStateStatus|CommOffsetBrickDataName|CommOffsetBrickDataTimeOutValue|CommOffsetBtConnectTableBdAddr|CommOffsetBtConnectTableClassOfDevice|CommOffsetBtConnectTableHandleNr|CommOffsetBtConnectTableLinkQuality|CommOffsetBtConnectTableName|CommOffsetBtConnectTablePinCode|CommOffsetBtConnectTableStreamStatus|CommOffsetBtDataMode|CommOffsetBtDeviceCnt|CommOffsetBtDeviceNameCnt|CommOffsetBtDeviceTableBdAddr|CommOffsetBtDeviceTableClassOfDevice|CommOffsetBtDeviceTableDeviceStatus|CommOffsetBtDeviceTableName|CommOffsetBtInBufBuf|CommOffsetBtInBufInPtr|CommOffsetBtInBufOutPtr|CommOffsetBtOutBufBuf|CommOffsetBtOutBufInPtr|CommOffsetBtOutBufOutPtr|CommOffsetHsDataMode|CommOffsetHsFlags|CommOffsetHsInBufBuf|CommOffsetHsInBufInPtr|CommOffsetHsInBufOutPtr|CommOffsetHsMode|CommOffsetHsOutBufBuf|CommOffsetHsOutBufInPtr|CommOffsetHsOutBufOutPtr|CommOffsetHsSpeed|CommOffsetHsState|CommOffsetPFunc|CommOffsetPFuncTwo|CommOffsetUsbInBufBuf|CommOffsetUsbInBufInPtr|CommOffsetUsbInBufOutPtr|CommOffsetUsbOutBufBuf|CommOffsetUsbOutBufInPtr|CommOffsetUsbOutBufOutPtr|CommOffsetUsbPollBufBuf|CommOffsetUsbPollBufInPtr|CommOffsetUsbPollBufOutPtr|CommOffsetUsbState|CommandFlags|CommandModuleID|CommandModuleName|CommandOffsetActivateFlag|CommandOffsetAwake|CommandOffsetDeactivateFlag|CommandOffsetFileName|CommandOffsetFormatString|CommandOffsetMemoryPool|CommandOffsetOffsetDS|CommandOffsetOffsetDVA|CommandOffsetPRCHandler|CommandOffsetProgStatus|CommandOffsetSyncTick|CommandOffsetSyncTime|CommandOffsetTick|ComputeCalibValue|ConfigureTemperatureSensor|Copy|Cos|CosD|Cosh|CoshD|CreateFile|CreateFileLinear|CreateFileNonLinear|CurrentTick|CustomSensorActiveStatus|CustomSensorPercentFullScale|CustomSensorZeroOffset|DISTNxDistance|DISTNxGP2D12|DISTNxGP2D120|DISTNxGP2YA02|DISTNxGP2YA21|DISTNxMaxDistance|DISTNxMinDistance|DISTNxModuleType|DISTNxNumPoints|DISTNxVoltage|DatalogGetTimes|DatalogWrite|DeleteFile|DisplayContrast|DisplayDisplay|DisplayEraseMask|DisplayExecuteFunction|DisplayFlags|DisplayFont|DisplayModuleID|DisplayModuleName|DisplayOffsetContrast|DisplayOffsetDisplay|DisplayOffsetEraseMask|DisplayOffsetFlags|DisplayOffsetNormal|DisplayOffsetPBitmaps|DisplayOffsetPFont|DisplayOffsetPFunc|DisplayOffsetPMenuIcons|DisplayOffsetPMenuText|DisplayOffsetPScreens|DisplayOffsetPStatusIcons|DisplayOffsetPStatusText|DisplayOffsetPStepIcons|DisplayOffsetPTextLines|DisplayOffsetPopup|DisplayOffsetStatusIcons|DisplayOffsetStepIcons|DisplayOffsetTextLinesCenterFlags|DisplayOffsetUpdateMask|DisplayTextLinesCenterFlags|DisplayUpdateMask|DrawCircle|DrawEllipse|DrawFont|DrawGraphic|DrawGraphicArray|DrawLine|DrawPoint|DrawPolygon|DrawRect|DrawText|EllipseOut|ExitTo|Exp|FileClose|FileDelete|FileFindFirst|FileFindNext|FileOpenAppend|FileOpenRead|FileOpenReadLinear|FileOpenWrite|FileOpenWriteLinear|FileOpenWriteNonLinear|FileRead|FileRename|FileResize|FileResolveHandle|FileSeek|FileTell|FileWrite|FindFirstFile|FindNextFile|FirstTick|Flatten|FlattenVar|Float|Floor|Follows|FontNumOut|FontTextOut|ForceOff|FormatNum|Frac|FreeMemory|GetBTConnectionAddress|GetBTDeviceAddress|GetBTInputBuffer|GetBTOutputBuffer|GetBrickDataAddress|GetButtonModuleValue|GetCommModuleBytes|GetCommModuleValue|GetCommandModuleBytes|GetCommandModuleValue|GetDisplayModuleBytes|GetDisplayModuleValue|GetDisplayNormal|GetDisplayPopup|GetHSInputBuffer|GetHSOutputBuffer|GetIOMapBytes|GetIOMapBytesByID|GetIOMapValue|GetIOMapValueByID|GetInput|GetInputModuleValue|GetLSInputBuffer|GetLSOutputBuffer|GetLastResponseInfo|GetLoaderModuleValue|GetLowSpeedModuleBytes|GetLowSpeedModuleValue|GetMemoryInfo|GetOutput|GetOutputModuleValue|GetSoundModuleValue|GetStartTick|GetUIModuleValue|GetUSBInputBuffer|GetUSBOutputBuffer|GetUSBPollBuffer|GraphicArrayOut|GraphicArrayOutEx|GraphicOut|GraphicOutEx|HSDataMode|HSFlags|HSInputBufferInPtr|HSInputBufferOutPtr|HSMode|HSOutputBufferInPtr|HSOutputBufferOutPtr|HSSpeed|HSState|HTIRTrain|HTPFComboDirect|HTPFComboPWM|HTPFRawOutput|HTPFRepeat|HTPFSingleOutputCST|HTPFSingleOutputPWM|HTPFSinglePin|HTPFTrain|HTPowerFunctionCommand|HTRCXAddToDatalog|HTRCXBatteryLevel|HTRCXClearAllEvents|HTRCXClearCounter|HTRCXClearMsg|HTRCXClearSensor|HTRCXClearSound|HTRCXClearTimer|HTRCXCreateDatalog|HTRCXDecCounter|HTRCXDeleteSub|HTRCXDeleteSubs|HTRCXDeleteTask|HTRCXDeleteTasks|HTRCXDisableOutput|HTRCXEnableOutput|HTRCXEvent|HTRCXFloat|HTRCXFwd|HTRCXIncCounter|HTRCXInvertOutput|HTRCXMuteSound|HTRCXObvertOutput|HTRCXOff|HTRCXOn|HTRCXOnFor|HTRCXOnFwd|HTRCXOnRev|HTRCXPBTurnOff|HTRCXPing|HTRCXPlaySound|HTRCXPlayTone|HTRCXPlayToneVar|HTRCXPoll|HTRCXPollMemory|HTRCXRemote|HTRCXRev|HTRCXSelectDisplay|HTRCXSelectProgram|HTRCXSendSerial|HTRCXSetDirection|HTRCXSetEvent|HTRCXSetGlobalDirection|HTRCXSetGlobalOutput|HTRCXSetIRLinkPort|HTRCXSetMaxPower|HTRCXSetMessage|HTRCXSetOutput|HTRCXSetPower|HTRCXSetPriority|HTRCXSetSensorMode|HTRCXSetSensorType|HTRCXSetSleepTime|HTRCXSetTxPower|HTRCXSetWatch|HTRCXStartTask|HTRCXStopAllTasks|HTRCXStopTask|HTRCXToggle|HTRCXUnmuteSound|HTScoutCalibrateSensor|HTScoutMuteSound|HTScoutSelectSounds|HTScoutSendVLL|HTScoutSetEventFeedback|HTScoutSetLight|HTScoutSetScoutMode|HTScoutSetSensorClickTime|HTScoutSetSensorHysteresis|HTScoutSetSensorLowerLimit|HTScoutSetSensorUpperLimit|HTScoutUnmuteSound|I2CBytes|I2CBytesReady|I2CCheckStatus|I2CDeviceId|I2CDeviceInfo|I2CRead|I2CSendCommand|I2CStatus|I2CVendorId|I2CVersion|I2CWrite|IOCtrlModuleID|IOCtrlModuleName|IOCtrlOffsetPowerOn|IOMapRead|IOMapReadByID|IOMapWrite|IOMapWriteByID|InputIOInputMode|InputIOInputMode0|InputIOInputMode1|InputIOInputMode2|InputIOInputMode3|InputIOInvalidData|InputIOInvalidData0|InputIOInvalidData1|InputIOInvalidData2|InputIOInvalidData3|InputIONormalizedValue|InputIONormalizedValue0|InputIONormalizedValue1|InputIONormalizedValue2|InputIONormalizedValue3|InputIORawValue|InputIORawValue0|InputIORawValue1|InputIORawValue2|InputIORawValue3|InputIOScaledValue|InputIOScaledValue0|InputIOScaledValue1|InputIOScaledValue2|InputIOScaledValue3|InputIOType|InputIOType0|InputIOType1|InputIOType2|InputIOType3|InputModeField|InputModuleID|InputModuleName|InputOffsetADRaw|InputOffsetColorADRaw|InputOffsetColorBoolean|InputOffsetColorCalLimits|InputOffsetColorCalibration|InputOffsetColorCalibrationState|InputOffsetColorSensorRaw|InputOffsetColorSensorValue|InputOffsetCustomActiveStatus|InputOffsetCustomPctFullScale|InputOffsetCustomZeroOffset|InputOffsetDigiPinsDir|InputOffsetDigiPinsIn|InputOffsetDigiPinsOut|InputOffsetInvalidData|InputOffsetSensorBoolean|InputOffsetSensorMode|InputOffsetSensorRaw|InputOffsetSensorType|InputOffsetSensorValue|InvalidDataField|KeepAlive|LSChannelState|LSErrorType|LSInputBufferBytesToRx|LSInputBufferInPtr|LSInputBufferOutPtr|LSMode|LSNoRestartOnRead|LSOutputBufferBytesToRx|LSOutputBufferInPtr|LSOutputBufferOutPtr|LSSpeed|LSState|LeftStr|LineOut|ListFiles|LoaderExecuteFunction|LoaderModuleID|LoaderModuleName|LoaderOffsetFreeUserFlash|LoaderOffsetPFunc|Log|Log10|LongAbort|LowSpeedModuleID|LowSpeedModuleName|LowSpeedOffsetChannelState|LowSpeedOffsetErrorType|LowSpeedOffsetInBufBuf|LowSpeedOffsetInBufBytesToRx|LowSpeedOffsetInBufInPtr|LowSpeedOffsetInBufOutPtr|LowSpeedOffsetMode|LowSpeedOffsetNoRestartOnRead|LowSpeedOffsetOutBufBuf|LowSpeedOffsetOutBufBytesToRx|LowSpeedOffsetOutBufInPtr|LowSpeedOffsetOutBufOutPtr|LowSpeedOffsetSpeed|LowSpeedOffsetState|LowspeedBytesReady|LowspeedCheckStatus|LowspeedRead|LowspeedStatus|LowspeedWrite|MSADPAOff|MSADPAOn|MSDeenergize|MSEnergize|MSIRTrain|MSPFComboDirect|MSPFComboPWM|MSPFRawOutput|MSPFRepeat|MSPFSingleOutputCST|MSPFSingleOutputPWM|MSPFSinglePin|MSPFTrain|MSRCXAbsVar|MSRCXAddToDatalog|MSRCXAndVar|MSRCXBatteryLevel|MSRCXBoot|MSRCXCalibrateEvent|MSRCXClearAllEvents|MSRCXClearCounter|MSRCXClearMsg|MSRCXClearSensor|MSRCXClearSound|MSRCXClearTimer|MSRCXCreateDatalog|MSRCXDecCounter|MSRCXDeleteSub|MSRCXDeleteSubs|MSRCXDeleteTask|MSRCXDeleteTasks|MSRCXDisableOutput|MSRCXDivVar|MSRCXEnableOutput|MSRCXEvent|MSRCXFloat|MSRCXFwd|MSRCXIncCounter|MSRCXInvertOutput|MSRCXMulVar|MSRCXMuteSound|MSRCXObvertOutput|MSRCXOff|MSRCXOn|MSRCXOnFor|MSRCXOnFwd|MSRCXOnRev|MSRCXOrVar|MSRCXPBTurnOff|MSRCXPing|MSRCXPlaySound|MSRCXPlayTone|MSRCXPlayToneVar|MSRCXPoll|MSRCXPollMemory|MSRCXRemote|MSRCXReset|MSRCXRev|MSRCXSelectDisplay|MSRCXSelectProgram|MSRCXSendSerial|MSRCXSet|MSRCXSetDirection|MSRCXSetEvent|MSRCXSetGlobalDirection|MSRCXSetGlobalOutput|MSRCXSetMaxPower|MSRCXSetMessage|MSRCXSetNRLinkPort|MSRCXSetOutput|MSRCXSetPower|MSRCXSetPriority|MSRCXSetSensorMode|MSRCXSetSensorType|MSRCXSetSleepTime|MSRCXSetTxPower|MSRCXSetUserDisplay|MSRCXSetVar|MSRCXSetWatch|MSRCXSgnVar|MSRCXStartTask|MSRCXStopAllTasks|MSRCXStopTask|MSRCXSubVar|MSRCXSumVar|MSRCXToggle|MSRCXUnlock|MSRCXUnmuteSound|MSReadValue|MSScoutCalibrateSensor|MSScoutMuteSound|MSScoutSelectSounds|MSScoutSendVLL|MSScoutSetCounterLimit|MSScoutSetEventFeedback|MSScoutSetLight|MSScoutSetScoutMode|MSScoutSetScoutRules|MSScoutSetSensorClickTime|MSScoutSetSensorHysteresis|MSScoutSetSensorLowerLimit|MSScoutSetSensorUpperLimit|MSScoutSetTimerLimit|MSScoutUnmuteSound|MaxAccelerationField|MaxSpeedField|MemoryManager|MessageRead|MessageWrite|MidStr|MotorActualSpeed|MotorBlockTachoCount|MotorMaxAcceleration|MotorMaxSpeed|MotorMode|MotorOutputOptions|MotorOverload|MotorPower|MotorPwnFreq|MotorRegDValue|MotorRegIValue|MotorRegPValue|MotorRegulation|MotorRegulationOptions|MotorRegulationTime|MotorRotationCount|MotorRunState|MotorTachoCount|MotorTachoLimit|MotorTurnRatio|MulDiv32|NRLink2400|NRLink4800|NRLinkFlush|NRLinkIRLong|NRLinkIRShort|NRLinkSetPF|NRLinkSetRCX|NRLinkSetTrain|NRLinkStatus|NRLinkTxRaw|NXTHIDAsciiMode|NXTHIDDirectMode|NXTHIDLoadCharacter|NXTHIDTransmit|NXTLineLeaderAverage|NXTLineLeaderCalibrateBlack|NXTLineLeaderCalibrateWhite|NXTLineLeaderInvert|NXTLineLeaderPowerDown|NXTLineLeaderPowerUp|NXTLineLeaderReset|NXTLineLeaderResult|NXTLineLeaderSnapshot|NXTLineLeaderSteering|NXTPowerMeterCapacityUsed|NXTPowerMeterElapsedTime|NXTPowerMeterErrorCount|NXTPowerMeterMaxCurrent|NXTPowerMeterMaxVoltage|NXTPowerMeterMinCurrent|NXTPowerMeterMinVoltage|NXTPowerMeterPresentCurrent|NXTPowerMeterPresentPower|NXTPowerMeterPresentVoltage|NXTPowerMeterResetCounters|NXTPowerMeterTotalPowerConsumed|NXTServoBatteryVoltage|NXTServoEditMacro|NXTServoGotoMacroAddress|NXTServoHaltMacro|NXTServoInit|NXTServoPauseMacro|NXTServoPosition|NXTServoQuitEdit|NXTServoReset|NXTServoResumeMacro|NXTServoSpeed|NormalizedValueField|NumOut|NumToStr|Off|OffEx|OnBrickProgramPointer|OnFwd|OnFwdEx|OnFwdReg|OnFwdRegEx|OnFwdRegExPID|OnFwdRegPID|OnFwdSync|OnFwdSyncEx|OnFwdSyncExPID|OnFwdSyncPID|OnRev|OnRevEx|OnRevReg|OnRevRegEx|OnRevRegExPID|OnRevRegPID|OnRevSync|OnRevSyncEx|OnRevSyncExPID|OnRevSyncPID|OpenFileAppend|OpenFileRead|OpenFileReadLinear|OutputIOActualSpeed|OutputIOActualSpeed0|OutputIOActualSpeed1|OutputIOActualSpeed2|OutputIOBlockTachoCount|OutputIOBlockTachoCount0|OutputIOBlockTachoCount1|OutputIOBlockTachoCount2|OutputIOOutputMode|OutputIOOutputMode0|OutputIOOutputMode1|OutputIOOutputMode2|OutputIOOverload|OutputIOOverload0|OutputIOOverload1|OutputIOOverload2|OutputIOPower|OutputIOPower0|OutputIOPower1|OutputIOPower2|OutputIORegDValue|OutputIORegDValue0|OutputIORegDValue1|OutputIORegDValue2|OutputIORegIValue|OutputIORegIValue0|OutputIORegIValue1|OutputIORegIValue2|OutputIORegMode|OutputIORegMode0|OutputIORegMode1|OutputIORegMode2|OutputIORegPValue|OutputIORegPValue0|OutputIORegPValue1|OutputIORegPValue2|OutputIORotationCount|OutputIORotationCount0|OutputIORotationCount1|OutputIORotationCount2|OutputIORunState|OutputIORunState0|OutputIORunState1|OutputIORunState2|OutputIOTachoCount|OutputIOTachoCount0|OutputIOTachoCount1|OutputIOTachoCount2|OutputIOTachoLimit|OutputIOTachoLimit0|OutputIOTachoLimit1|OutputIOTachoLimit2|OutputIOTurnRatio|OutputIOTurnRatio0|OutputIOTurnRatio1|OutputIOTurnRatio2|OutputIOUpdateFlags|OutputIOUpdateFlags0|OutputIOUpdateFlags1|OutputIOUpdateFlags2|OutputModeField|OutputModuleID|OutputModuleName|OutputOffsetActualSpeed|OutputOffsetBlockTachoCount|OutputOffsetFlags|OutputOffsetMaxAccel|OutputOffsetMaxSpeed|OutputOffsetMode|OutputOffsetMotorRPM|OutputOffsetOptions|OutputOffsetOverloaded|OutputOffsetRegDParameter|OutputOffsetRegIParameter|OutputOffsetRegMode|OutputOffsetRegPParameter|OutputOffsetRegulationOptions|OutputOffsetRegulationTime|OutputOffsetRotationCount|OutputOffsetRunState|OutputOffsetSpeed|OutputOffsetSyncTurnParameter|OutputOffsetTachoCount|OutputOffsetTachoLimit|OutputOptionsField|OverloadField|PFMateSend|PFMateSendRaw|PSPNxAnalog|PSPNxDigital|PlayFile|PlayFileEx|PlaySound|PlayTone|PlayToneEx|PlayTones|PointOut|PolyOut|Pos|PosRegAddAngle|PosRegEnable|PosRegSetAngle|PosRegSetMax|Pow|PowerDown|PowerField|Precedes|RCX_AbsVarOp|RCX_AndVarOp|RCX_AutoOffOp|RCX_BatteryLevelOp|RCX_BatteryLevelSrc|RCX_BootModeOp|RCX_CalibrateEventOp|RCX_ClearAllEventsOp|RCX_ClearCounterOp|RCX_ClearMsgOp|RCX_ClearSensorOp|RCX_ClearSoundOp|RCX_ClearTimerOp|RCX_ClickCounterSrc|RCX_ConstantSrc|RCX_CounterSrc|RCX_DatalogOp|RCX_DatalogRawDirectSrc|RCX_DatalogRawIndirectSrc|RCX_DatalogSrcDirectSrc|RCX_DatalogSrcIndirectSrc|RCX_DatalogValueDirectSrc|RCX_DatalogValueIndirectSrc|RCX_DecCounterOp|RCX_DeleteSubOp|RCX_DeleteSubsOp|RCX_DeleteTaskOp|RCX_DeleteTasksOp|RCX_DirectEventOp|RCX_DisplayOp|RCX_DivVarOp|RCX_DurationSrc|RCX_EventStateSrc|RCX_FirmwareVersionSrc|RCX_GOutputDirOp|RCX_GOutputModeOp|RCX_GOutputPowerOp|RCX_GlobalMotorStatusSrc|RCX_HysteresisSrc|RCX_IRModeOp|RCX_IncCounterOp|RCX_IndirectVarSrc|RCX_InputBooleanSrc|RCX_InputModeOp|RCX_InputModeSrc|RCX_InputRawSrc|RCX_InputTypeOp|RCX_InputTypeSrc|RCX_InputValueSrc|RCX_LSBlinkTimeOp|RCX_LSCalibrateOp|RCX_LSHysteresisOp|RCX_LSLowerThreshOp|RCX_LSUpperThreshOp|RCX_LightOp|RCX_LowerThresholdSrc|RCX_MessageOp|RCX_MessageSrc|RCX_MulVarOp|RCX_MuteSoundOp|RCX_OnOffFloatOp|RCX_OrVarOp|RCX_OutputDirOp|RCX_OutputPowerOp|RCX_OutputStatusSrc|RCX_PBTurnOffOp|RCX_PingOp|RCX_PlaySoundOp|RCX_PlayToneOp|RCX_PlayToneVarOp|RCX_PollMemoryOp|RCX_PollOp|RCX_ProgramSlotSrc|RCX_RandomSrc|RCX_RemoteKeysReleased|RCX_RemoteOp|RCX_RemoteOutABackward|RCX_RemoteOutAForward|RCX_RemoteOutBBackward|RCX_RemoteOutBForward|RCX_RemoteOutCBackward|RCX_RemoteOutCForward|RCX_RemotePBMessage1|RCX_RemotePBMessage2|RCX_RemotePBMessage3|RCX_RemotePlayASound|RCX_RemoteSelProgram1|RCX_RemoteSelProgram2|RCX_RemoteSelProgram3|RCX_RemoteSelProgram4|RCX_RemoteSelProgram5|RCX_RemoteStopOutOff|RCX_ScoutCounterLimitSrc|RCX_ScoutEventFBSrc|RCX_ScoutLightParamsSrc|RCX_ScoutOp|RCX_ScoutRulesOp|RCX_ScoutRulesSrc|RCX_ScoutTimerLimitSrc|RCX_SelectProgramOp|RCX_SendUARTDataOp|RCX_SetCounterOp|RCX_SetDatalogOp|RCX_SetEventOp|RCX_SetFeedbackOp|RCX_SetPriorityOp|RCX_SetSourceValueOp|RCX_SetTimerLimitOp|RCX_SetVarOp|RCX_SetWatchOp|RCX_SgnVarOp|RCX_SoundOp|RCX_StartTaskOp|RCX_StopAllTasksOp|RCX_StopTaskOp|RCX_SubVarOp|RCX_SumVarOp|RCX_TaskEventsSrc|RCX_TenMSTimerSrc|RCX_TimerSrc|RCX_UARTSetupSrc|RCX_UnlockFirmOp|RCX_UnlockOp|RCX_UnmuteSoundOp|RCX_UploadDatalogOp|RCX_UpperThresholdSrc|RCX_VLLOp|RCX_VariableSrc|RCX_ViewSourceValOp|RCX_WatchSrc|RFIDInit|RFIDMode|RFIDRead|RFIDReadContinuous|RFIDReadSingle|RFIDStatus|RFIDStop|RICArg|RICImgPoint|RICImgRect|RICMapArg|RICMapElement|RICMapFunction|RICOpCircle|RICOpCopyBits|RICOpDescription|RICOpEllipse|RICOpLine|RICOpNumBox|RICOpPixel|RICOpPolygon|RICOpRect|RICOpSprite|RICOpVarMap|RICPolygonPoints|RICSetValue|RICSpriteData|RS485Control|RS485DataAvailable|RS485Disable|RS485Enable|RS485Initialize|RS485Read|RS485SendingData|RS485Status|RS485Uart|RS485Write|Random|RandomNumber|RawValueField|Read|ReadButton|ReadButtonEx|ReadBytes|ReadI2CRegister|ReadLastResponse|ReadLn|ReadLnString|ReadNRLinkBytes|ReadSemData|ReadSensorColorEx|ReadSensorColorRaw|ReadSensorEMeter|ReadSensorHTAccel|ReadSensorHTAngle|ReadSensorHTColor|ReadSensorHTColor2Active|ReadSensorHTIRReceiver|ReadSensorHTIRReceiverEx|ReadSensorHTIRSeeker|ReadSensorHTIRSeeker2AC|ReadSensorHTIRSeeker2DC|ReadSensorHTNormalizedColor|ReadSensorHTNormalizedColor2Active|ReadSensorHTRawColor|ReadSensorHTRawColor2|ReadSensorHTTouchMultiplexer|ReadSensorMSAccel|ReadSensorMSPlayStation|ReadSensorMSRTClock|ReadSensorMSTilt|ReadSensorUSEx|RebootInFirmwareMode|ReceiveMessage|ReceiveRemoteBool|ReceiveRemoteMessageEx|ReceiveRemoteNumber|ReceiveRemoteString|RechargeableBattery|RectOut|RegDValueField|RegIValueField|RegModeField|RegPValueField|Release|RemoteBluetoothFactoryReset|RemoteCloseFile|RemoteConnectionIdle|RemoteConnectionWrite|RemoteDatalogRead|RemoteDatalogSetTimes|RemoteDeleteFile|RemoteDeleteUserFlash|RemoteFindFirstFile|RemoteFindNextFile|RemoteGetBatteryLevel|RemoteGetBluetoothAddress|RemoteGetConnectionCount|RemoteGetConnectionName|RemoteGetContactCount|RemoteGetContactName|RemoteGetCurrentProgramName|RemoteGetDeviceInfo|RemoteGetFirmwareVersion|RemoteGetInputValues|RemoteGetOutputState|RemoteGetProperty|RemoteIOMapRead|RemoteIOMapWriteBytes|RemoteIOMapWriteValue|RemoteKeepAlive|RemoteLowspeedGetStatus|RemoteLowspeedRead|RemoteLowspeedWrite|RemoteMessageRead|RemoteMessageWrite|RemoteOpenAppendData|RemoteOpenRead|RemoteOpenWrite|RemoteOpenWriteData|RemoteOpenWriteLinear|RemotePlaySoundFile|RemotePlayTone|RemotePollCommand|RemotePollCommandLength|RemoteRead|RemoteRenameFile|RemoteResetMotorPosition|RemoteResetScaledValue|RemoteResetTachoCount|RemoteSetBrickName|RemoteSetInputMode|RemoteSetOutputState|RemoteSetProperty|RemoteStartProgram|RemoteStopProgram|RemoteStopSound|RemoteWrite|RenameFile|ResetAllTachoCounts|ResetBlockTachoCount|ResetRotationCount|ResetScreen|ResetSensor|ResetSensorHTAngle|ResetSleepTimer|ResetTachoCount|ResizeFile|ResolveHandle|RightStr|RotateMotor|RotateMotorEx|RotateMotorExPID|RotateMotorPID|RotationCountField|RunNRLinkMacro|RunStateField|ScaledValueField|SendMessage|SendRS485Bool|SendRS485Number|SendRS485String|SendRemoteBool|SendRemoteNumber|SendRemoteString|SendResponseBool|SendResponseNumber|SendResponseString|Sensor|SensorBoolean|SensorDigiPinsDirection|SensorDigiPinsOutputLevel|SensorDigiPinsStatus|SensorHTColorNum|SensorHTCompass|SensorHTEOPD|SensorHTGyro|SensorHTIRSeeker2ACDir|SensorHTIRSeeker2Addr|SensorHTIRSeeker2DCDir|SensorHTIRSeekerDir|SensorHTMagnet|SensorInvalid|SensorMSCompass|SensorMSDROD|SensorMSPressure|SensorMSPressureRaw|SensorMode|SensorNXTSumoEyesRaw|SensorNormalized|SensorRaw|SensorScaled|SensorTemperature|SensorType|SensorUS|SensorValue|SensorValueBool|SensorValueRaw|SetACCLNxSensitivity|SetAbortFlag|SetBTConnectionAddress|SetBTConnectionClass|SetBTConnectionHandleNum|SetBTConnectionLinkQuality|SetBTConnectionName|SetBTConnectionPinCode|SetBTConnectionStreamStatus|SetBTDataMode|SetBTDeviceAddress|SetBTDeviceClass|SetBTDeviceCount|SetBTDeviceName|SetBTDeviceNameCount|SetBTDeviceStatus|SetBTInputBuffer|SetBTInputBufferInPtr|SetBTInputBufferOutPtr|SetBTOutputBuffer|SetBTOutputBufferInPtr|SetBTOutputBufferOutPtr|SetBatteryState|SetBluetoothState|SetBrickDataAddress|SetBrickDataBluecoreVersion|SetBrickDataBtHardwareStatus|SetBrickDataBtStateStatus|SetBrickDataName|SetBrickDataTimeoutValue|SetButtonLongPressCount|SetButtonLongReleaseCount|SetButtonModuleValue|SetButtonPressCount|SetButtonReleaseCount|SetButtonShortReleaseCount|SetButtonState|SetCommModuleBytes|SetCommModuleValue|SetCommandFlags|SetCommandModuleBytes|SetCommandModuleValue|SetCustomSensorActiveStatus|SetCustomSensorPercentFullScale|SetCustomSensorZeroOffset|SetDisplayContrast|SetDisplayDisplay|SetDisplayEraseMask|SetDisplayFlags|SetDisplayFont|SetDisplayModuleBytes|SetDisplayModuleValue|SetDisplayNormal|SetDisplayPopup|SetDisplayTextLinesCenterFlags|SetDisplayUpdateMask|SetHSDataMode|SetHSFlags|SetHSInputBuffer|SetHSInputBufferInPtr|SetHSInputBufferOutPtr|SetHSMode|SetHSOutputBuffer|SetHSOutputBufferInPtr|SetHSOutputBufferOutPtr|SetHSSpeed|SetHSState|SetHTColor2Mode|SetHTIRSeeker2Mode|SetIOCtrlModuleValue|SetIOMA|SetIOMapBytes|SetIOMapBytesByID|SetIOMapValue|SetIOMapValueByID|SetInput|SetInputModuleValue|SetLSChannelState|SetLSErrorType|SetLSInputBuffer|SetLSInputBufferBytesToRx|SetLSInputBufferInPtr|SetLSInputBufferOutPtr|SetLSMode|SetLSNoRestartOnRead|SetLSOutputBuffer|SetLSOutputBufferBytesToRx|SetLSOutputBufferInPtr|SetLSOutputBufferOutPtr|SetLSSpeed|SetLSState|SetLoaderModuleValue|SetLongAbort|SetLowSpeedModuleBytes|SetLowSpeedModuleValue|SetMotorPwnFreq|SetMotorRegulationOptions|SetMotorRegulationTime|SetNXTLineLeaderKdFactor|SetNXTLineLeaderKdValue|SetNXTLineLeaderKiFactor|SetNXTLineLeaderKiValue|SetNXTLineLeaderKpFactor|SetNXTLineLeaderKpValue|SetNXTLineLeaderSetpoint|SetNXTServoPosition|SetNXTServoQuickPosition|SetNXTServoSpeed|SetOnBrickProgramPointer|SetOutput|SetOutputModuleValue|SetScreenMode|SetSensor|SetSensorBoolean|SetSensorColorBlue|SetSensorColorFull|SetSensorColorGreen|SetSensorColorNone|SetSensorColorRed|SetSensorDigiPinsDirection|SetSensorDigiPinsOutputLevel|SetSensorDigiPinsStatus|SetSensorEMeter|SetSensorHTEOPD|SetSensorHTGyro|SetSensorHTMagnet|SetSensorLight|SetSensorLowspeed|SetSensorMSDROD|SetSensorMSPressure|SetSensorMode|SetSensorNXTSumoEyes|SetSensorSound|SetSensorTemperature|SetSensorTouch|SetSensorType|SetSensorUltrasonic|SetSleepTime|SetSleepTimeout|SetSleepTimeoutVal|SetSleepTimer|SetSoundDuration|SetSoundFlags|SetSoundFrequency|SetSoundMode|SetSoundModuleState|SetSoundModuleValue|SetSoundSampleRate|SetSoundVolume|SetUIButton|SetUIModuleValue|SetUIState|SetUSBInputBuffer|SetUSBInputBufferInPtr|SetUSBInputBufferOutPtr|SetUSBOutputBuffer|SetUSBOutputBufferInPtr|SetUSBOutputBufferOutPtr|SetUSBPollBuffer|SetUSBPollBufferInPtr|SetUSBPollBufferOutPtr|SetUSBState|SetUsbState|SetVMRunState|SetVolume|Sin|SinD|Sinh|SinhD|SizeOf|SleepNow|SleepTime|SleepTimeout|SleepTimer|SoundDuration|SoundFlags|SoundFrequency|SoundGetState|SoundMode|SoundModuleID|SoundModuleName|SoundOffsetDuration|SoundOffsetFlags|SoundOffsetFreq|SoundOffsetMode|SoundOffsetSampleRate|SoundOffsetSoundFilename|SoundOffsetState|SoundOffsetVolume|SoundPlayFile|SoundPlayTone|SoundSampleRate|SoundSetState|SoundState|SoundVolume|SpawnProgram|Sqrt|StartTask|Stop|StopAllTasks|StopSound|StopTask|StrCat|StrIndex|StrLen|StrReplace|StrToByteArray|StrToNum|SubStr|SysCall|SysColorSensorRead|SysCommBTCheckStatus|SysCommBTConnection|SysCommBTOnOff|SysCommBTWrite|SysCommExecuteFunction|SysCommHSCheckStatus|SysCommHSControl|SysCommHSRead|SysCommHSWrite|SysCommLSCheckStatus|SysCommLSRead|SysCommLSWrite|SysCommLSWriteEx|SysComputeCalibValue|SysDatalogGetTimes|SysDatalogWrite|SysDisplayExecuteFunction|SysDrawCircle|SysDrawEllipse|SysDrawFont|SysDrawGraphic|SysDrawGraphicArray|SysDrawLine|SysDrawPoint|SysDrawPolygon|SysDrawRect|SysDrawText|SysFileClose|SysFileDelete|SysFileFindFirst|SysFileFindNext|SysFileOpenAppend|SysFileOpenRead|SysFileOpenReadLinear|SysFileOpenWrite|SysFileOpenWriteLinear|SysFileOpenWriteNonLinear|SysFileRead|SysFileRename|SysFileResize|SysFileResolveHandle|SysFileSeek|SysFileTell|SysFileWrite|SysGetStartTick|SysIOMapRead|SysIOMapReadByID|SysIOMapWrite|SysIOMapWriteByID|SysKeepAlive|SysListFiles|SysLoaderExecuteFunction|SysMemoryManager|SysMessageRead|SysMessageWrite|SysRandomNumber|SysReadButton|SysReadLastResponse|SysReadSemData|SysSetScreenMode|SysSetSleepTimeout|SysSoundGetState|SysSoundPlayFile|SysSoundPlayTone|SysSoundSetState|SysUpdateCalibCacheInfo|SysWriteSemData|TachoCountField|TachoLimitField|Tan|TanD|Tanh|TanhD|TextOut|Trunc|TurnRatioField|TypeField|UIButton|UIModuleID|UIModuleName|UIOffsetAbortFlag|UIOffsetBatteryState|UIOffsetBatteryVoltage|UIOffsetBluetoothState|UIOffsetButton|UIOffsetError|UIOffsetFlags|UIOffsetForceOff|UIOffsetLMSfilename|UIOffsetOBPPointer|UIOffsetPMenu|UIOffsetRechargeable|UIOffsetRunState|UIOffsetSleepTimeout|UIOffsetSleepTimer|UIOffsetState|UIOffsetUsbState|UIOffsetVolume|UIState|USBInputBufferInPtr|USBInputBufferOutPtr|USBOutputBufferInPtr|USBOutputBufferOutPtr|USBPollBufferInPtr|USBPollBufferOutPtr|USBState|UnflattenVar|UpdateCalibCacheInfo|UpdateFlagsField|UsbState|UseRS485|VMRunState|Volume|Wait|Write|WriteBytes|WriteBytesEx|WriteI2CRegister|WriteLn|WriteLnString|WriteNRLinkBytes|WriteSemData|WriteString|Yield|_Bool|_Complex|_Imaginary|_SENSOR_CFG|__alignof__|__asm__|__attribute__|__complex__|__extension__|__has_attribute|__has_builtin|__has_extension|__has_feature|__has_include|__has_include_next|__has_warning|__imag__|__label__|__real__|__restrict|__restrict__|__typeof__|abort|abs|acos|acosd|addressOf|addressOfEx|asin|asind|asm|atan|atan2|atan2d|atand|atof|atoi|atol|bcd2dec|bool|break|byte|case|ceil|char|const|continue|cos|cosd|cosh|coshd|default|div_t div|do|else|enum|exp|false|fclose|feof|fflush|fgetc|fgets|float|floor|for|fprintf|fputc|fputs|frac|fseek|ftell|getc|getchar|glAddToAngleX|glAddToAngleY|glAddToAngleZ|glAddVertex|glBegin|glBeginObject|glBeginRender|glBox|glCallObject|glCos32768|glCube|glEnd|glEndObject|glFinishRender|glInit|glObjectAction|glPyramid|glSet|glSetAngleX|glSetAngleY|glSetAngleZ|glSin32768|goto|if|inline|int|isNAN|isalnum|isalpha|iscntrl|isdigit|isgraph|islower|isprint|ispunct|isspace|isupper|isxdigit|labs|ldiv_t ldiv|log|log10|long|memchr |memcmp|memcpy|memmove|memset |muldiv32|mutex|pow|printf|priority|putc|rand|register|reladdressOf|remove|rename|repeat|restrict|return|rewind|s16|s32|s8|safecall|set_fopen_size|short|sign|signed|sin|sind|sinh|sinhd|sizeof|sprintf|sqrt|start|static|stop|strcat|strcmp|strcpy|string|strlen|strncat|strncmp|strncpy|strtod|strtol|strtoul|struct|sub|switch|tan|tand|tanh|tanhd|task|tolower|toupper|true|trunc|typedef|typeof|u16|u32|u8|union|unsigned|until|void|volatile|while)\b/
                , token: "keyword"
        }
        , {
                regex: /(?:ACCL_CMD_RESET_CAL|ACCL_CMD_X_CAL|ACCL_CMD_X_CAL_END|ACCL_CMD_Y_CAL|ACCL_CMD_Y_CAL_END|ACCL_CMD_Z_CAL|ACCL_CMD_Z_CAL_END|ACCL_REG_SENS_LVL|ACCL_REG_X_ACCEL|ACCL_REG_X_OFFSET|ACCL_REG_X_RANGE|ACCL_REG_X_TILT|ACCL_REG_Y_ACCEL|ACCL_REG_Y_OFFSET|ACCL_REG_Y_RANGE|ACCL_REG_Y_TILT|ACCL_REG_Z_ACCEL|ACCL_REG_Z_OFFSET|ACCL_REG_Z_RANGE|ACCL_REG_Z_TILT|ACCL_SENSITIVITY_LEVEL_1|ACCL_SENSITIVITY_LEVEL_2|ACCL_SENSITIVITY_LEVEL_3|ACCL_SENSITIVITY_LEVEL_4|BITMAPS|BITMAP_1|BITMAP_2|BITMAP_3|BITMAP_4|BREAKOUT_REQ|BTN1|BTN2|BTN3|BTN4|BTNCENTER|BTNEXIT|BTNLEFT|BTNRIGHT|BTNSTATE_LONG_PRESSED_EV|BTNSTATE_LONG_RELEASED_EV|BTNSTATE_NONE|BTNSTATE_PRESSED_EV|BTNSTATE_PRESSED_STATE|BTNSTATE_SHORT_RELEASED_EV|BT_ARM_CMD_MODE|BT_ARM_DATA_MODE|BT_ARM_OFF|BT_BRICK_PORT_OPEN|BT_BRICK_VISIBILITY|BT_CMD_BYTE|BT_CMD_READY|BT_CONNECTION_0_ENABLE|BT_CONNECTION_1_ENABLE|BT_CONNECTION_2_ENABLE|BT_CONNECTION_3_ENABLE|BT_DEFAULT_INQUIRY_MAX|BT_DEFAULT_INQUIRY_TIMEOUT_LO|BT_DEVICE_AWAY|BT_DEVICE_EMPTY|BT_DEVICE_KNOWN|BT_DEVICE_NAME|BT_DEVICE_UNKNOWN|BT_DISABLE|BT_ENABLE|CHAR_BIT|CHAR_MAX|CHAR_MIN|CLUMP_DONE|CLUMP_SUSPEND|COM_CHANNEL_FOUR_ACTIVE|COM_CHANNEL_NONE_ACTIVE|COM_CHANNEL_ONE_ACTIVE|COM_CHANNEL_THREE_ACTIVE|COM_CHANNEL_TWO_ACTIVE|CONN_BT0|CONN_BT1|CONN_BT2|CONN_BT3|CONN_HS4|CONN_HS_1|CONN_HS_2|CONN_HS_3|CONN_HS_4|CONN_HS_5|CONN_HS_6|CONN_HS_7|CONN_HS_8|CONN_HS_ALL|CT_ADDR_RFID|CT_REG_DATA|CT_REG_MODE|CT_REG_STATUS|DATA_MODE_GPS|DATA_MODE_MASK|DATA_MODE_NXT|DATA_MODE_RAW|DATA_MODE_UPDATE|DEGREES_PER_RADIAN|DISPLAY_BUSY|DISPLAY_CHAR|DISPLAY_CONTRAST_DEFAULT|DISPLAY_CONTRAST_MAX|DISPLAY_ERASE_ALL|DISPLAY_ERASE_LINE|DISPLAY_FILL_REGION|DISPLAY_FRAME|DISPLAY_HEIGHT|DISPLAY_HORIZONTAL_LINE|DISPLAY_MENUICONS_X_DIFF|DISPLAY_MENUICONS_X_OFFS|DISPLAY_MENUICONS_Y|DISPLAY_ON|DISPLAY_PIXEL|DISPLAY_POPUP|DISPLAY_REFRESH|DISPLAY_REFRESH_DISABLED|DISPLAY_VERTICAL_LINE|DISPLAY_WIDTH|DIST_CMD_CUSTOM|DIST_CMD_GP2D12|DIST_CMD_GP2D120|DIST_CMD_GP2YA02|DIST_CMD_GP2YA21|DIST_REG_DIST|DIST_REG_DIST1|DIST_REG_DIST_MAX|DIST_REG_DIST_MIN|DIST_REG_MODULE_TYPE|DIST_REG_NUM_POINTS|DIST_REG_VOLT|DIST_REG_VOLT1|DRAW_OPT_CLEAR|DRAW_OPT_CLEAR_EXCEPT_STATUS_SCREEN|DRAW_OPT_CLEAR_PIXELS|DRAW_OPT_CLEAR_SCREEN_MODES|DRAW_OPT_CLEAR_WHOLE_SCREEN|DRAW_OPT_FILL_SHAPE|DRAW_OPT_FONT_DIRECTIONS|DRAW_OPT_FONT_DIR_B2TL|DRAW_OPT_FONT_DIR_B2TR|DRAW_OPT_FONT_DIR_L2RB|DRAW_OPT_FONT_DIR_L2RT|DRAW_OPT_FONT_DIR_R2LB|DRAW_OPT_FONT_DIR_R2LT|DRAW_OPT_FONT_DIR_T2BL|DRAW_OPT_FONT_DIR_T2BR|DRAW_OPT_FONT_WRAP|DRAW_OPT_INVERT|DRAW_OPT_LOGICAL_AND|DRAW_OPT_LOGICAL_COPY|DRAW_OPT_LOGICAL_OPERATIONS|DRAW_OPT_LOGICAL_OR|DRAW_OPT_LOGICAL_XOR|DRAW_OPT_NORMAL|DRAW_OPT_POLYGON_POLYLINE|EMETER_REG_AIN|EMETER_REG_AOUT|EMETER_REG_JOULES|EMETER_REG_VIN|EMETER_REG_VOUT|EMETER_REG_WIN|EMETER_REG_WOUT|EOF|ERR_ARG|ERR_BAD_POOL_SIZE|ERR_BAD_PTR|ERR_CLUMP_COUNT|ERR_COMM_BUFFER_FULL|ERR_COMM_BUS_ERR|ERR_COMM_CHAN_INVALID|ERR_COMM_CHAN_NOT_READY|ERR_DEFAULT_OFFSETS|ERR_FILE|ERR_INSANE_OFFSET|ERR_INSTR|ERR_INVALID_FIELD|ERR_INVALID_PORT|ERR_INVALID_QUEUE|ERR_INVALID_SIZE|ERR_LOADER_ERR|ERR_MEM|ERR_MEMMGR_FAIL|ERR_NON_FATAL|ERR_NO_ACTIVE_CLUMP|ERR_NO_CODE|ERR_NO_PROG|ERR_RC_BAD_PACKET|ERR_RC_FAILED|ERR_RC_ILLEGAL_VAL|ERR_RC_UNKNOWN_CMD|ERR_SPOTCHECK_FAIL|ERR_VER|FALSE|FRAME_SELECT|FREQUENCY_MAX|FREQUENCY_MIN|GL_CAMERA_DEPTH|GL_CIRCLE|GL_CIRCLE_SIZE|GL_CULL_BACK|GL_CULL_FRONT|GL_CULL_MODE|GL_CULL_NONE|GL_LINE|GL_POINT|GL_POLYGON|GL_ROTATE_X|GL_ROTATE_Y|GL_ROTATE_Z|GL_SCALE_X|GL_SCALE_Y|GL_SCALE_Z|GL_TRANSLATE_X|GL_TRANSLATE_Y|GL_TRANSLATE_Z|GL_ZOOM_FACTOR|HS_ADDRESS_1|HS_ADDRESS_2|HS_ADDRESS_3|HS_ADDRESS_4|HS_ADDRESS_5|HS_ADDRESS_6|HS_ADDRESS_7|HS_ADDRESS_8|HS_ADDRESS_ALL|HS_BAUD_115200|HS_BAUD_1200|HS_BAUD_14400|HS_BAUD_19200|HS_BAUD_230400|HS_BAUD_2400|HS_BAUD_28800|HS_BAUD_3600|HS_BAUD_38400|HS_BAUD_460800|HS_BAUD_4800|HS_BAUD_57600|HS_BAUD_7200|HS_BAUD_76800|HS_BAUD_921600|HS_BAUD_9600|HS_BAUD_DEFAULT|HS_CMD_READY|HS_CTRL_EXIT|HS_CTRL_INIT|HS_CTRL_UART|HS_DISABLE|HS_ENABLE|HS_INITIALISE|HS_INIT_RECEIVER|HS_MODE_10_STOP|HS_MODE_15_STOP|HS_MODE_20_STOP|HS_MODE_5_DATA|HS_MODE_6_DATA|HS_MODE_7E1|HS_MODE_7_DATA|HS_MODE_8N1|HS_MODE_8_DATA|HS_MODE_DEFAULT|HS_MODE_E_PARITY|HS_MODE_M_PARITY|HS_MODE_N_PARITY|HS_MODE_O_PARITY|HS_MODE_S_PARITY|HS_SEND_DATA|HS_UPDATE|HTANGLE_MODE_CALIBRATE|HTANGLE_MODE_NORMAL|HTANGLE_MODE_RESET|HTANGLE_REG_ACDIR|HTANGLE_REG_DC01|HTANGLE_REG_DC02|HTANGLE_REG_DC03|HTANGLE_REG_DC04|HTANGLE_REG_DC05|HTANGLE_REG_DCAVG|HTANGLE_REG_DCDIR|HTANGLE_REG_MODE|HTIR2_MODE_1200|HTIR2_MODE_600|HTIR2_REG_AC01|HTIR2_REG_AC02|HTIR2_REG_AC03|HTIR2_REG_AC04|HTIR2_REG_AC05|HTIR2_REG_ACDIR|HTIR2_REG_DC01|HTIR2_REG_DC02|HTIR2_REG_DC03|HTIR2_REG_DC04|HTIR2_REG_DC05|HTIR2_REG_DCAVG|HTIR2_REG_DCDIR|HTIR2_REG_MODE|HT_ADDR_ACCEL|HT_ADDR_ANGLE|HT_ADDR_COLOR|HT_ADDR_COLOR2|HT_ADDR_COMPASS|HT_ADDR_IRLINK|HT_ADDR_IRRECEIVER|HT_ADDR_IRSEEKER|HT_ADDR_IRSEEKER2|HT_CH1_A|HT_CH1_B|HT_CH2_A|HT_CH2_B|HT_CH3_A|HT_CH3_B|HT_CH4_A|HT_CH4_B|HT_CMD_COLOR2_50HZ|HT_CMD_COLOR2_60HZ|HT_CMD_COLOR2_ACTIVE|HT_CMD_COLOR2_BLCAL|HT_CMD_COLOR2_FAR|HT_CMD_COLOR2_LED_HI|HT_CMD_COLOR2_LED_LOW|HT_CMD_COLOR2_NEAR|HT_CMD_COLOR2_PASSIVE|HT_CMD_COLOR2_RAW|HT_CMD_COLOR2_WBCAL|I2C_ADDR_DEFAULT|I2C_REG_CMD|I2C_REG_DEVICE_ID|I2C_REG_VENDOR_ID|I2C_REG_VERSION|INPUT_BLACKCOLOR|INPUT_BLANK|INPUT_BLUE|INPUT_BLUECOLOR|INPUT_CAL_POINT_0|INPUT_CAL_POINT_1|INPUT_CAL_POINT_2|INPUT_CUSTOM9V|INPUT_CUSTOMACTIVE|INPUT_CUSTOMINACTIVE|INPUT_DIGI0|INPUT_DIGI1|INPUT_GREEN|INPUT_GREENCOLOR|INPUT_INVALID_DATA|INPUT_NO_OF_COLORS|INPUT_NO_OF_POINTS|INPUT_RED|INPUT_REDCOLOR|INPUT_RESETCAL|INPUT_RUNNINGCAL|INPUT_SENSORCAL|INPUT_SENSOROFF|INPUT_STARTCAL|INPUT_WHITECOLOR|INPUT_YELLOWCOLOR|INTF_BTOFF|INTF_BTON|INTF_CONNECT|INTF_CONNECTBYNAME|INTF_CONNECTREQ|INTF_DISCONNECT|INTF_DISCONNECTALL|INTF_EXTREAD|INTF_FACTORYRESET|INTF_OPENSTREAM|INTF_PINREQ|INTF_REMOVEDEVICE|INTF_SEARCH|INTF_SENDDATA|INTF_SENDFILE|INTF_SETBTNAME|INTF_SETCMDMODE|INTF_STOPSEARCH|INTF_VISIBILITY|INT_MAX|INT_MIN|IN_1|IN_2|IN_3|IN_4|IN_MODE_ANGLESTEP|IN_MODE_BOOLEAN|IN_MODE_CELSIUS|IN_MODE_FAHRENHEIT|IN_MODE_MODEMASK|IN_MODE_PCTFULLSCALE|IN_MODE_PERIODCOUNTER|IN_MODE_RAW|IN_MODE_SLOPEMASK|IN_MODE_TRANSITIONCNT|IN_TYPE_ANGLE|IN_TYPE_COLORBLUE|IN_TYPE_COLOREXIT|IN_TYPE_COLORFULL|IN_TYPE_COLORGREEN|IN_TYPE_COLORNONE|IN_TYPE_COLORRED|IN_TYPE_CUSTOM|IN_TYPE_HISPEED|IN_TYPE_LIGHT_ACTIVE|IN_TYPE_LIGHT_INACTIVE|IN_TYPE_LOWSPEED|IN_TYPE_LOWSPEED_9V|IN_TYPE_NO_SENSOR|IN_TYPE_REFLECTION|IN_TYPE_SOUND_DB|IN_TYPE_SOUND_DBA|IN_TYPE_SWITCH|IN_TYPE_TEMPERATURE|IOCTRL_BOOT|IOCTRL_POWERDOWN|IOMA|IO_BASE|IO_IN_FPP|IO_OUT_FPP|LCD_LINE1|LCD_LINE2|LCD_LINE3|LCD_LINE4|LCD_LINE5|LCD_LINE6|LCD_LINE7|LCD_LINE8|LDR_APPENDNOTPOSSIBLE|LDR_BTBUSY|LDR_BTCONNECTFAIL|LDR_BTTIMEOUT|LDR_CMD_BOOTCMD|LDR_CMD_BTFACTORYRESET|LDR_CMD_BTGETADR|LDR_CMD_CLOSE|LDR_CMD_CLOSEMODHANDLE|LDR_CMD_CROPDATAFILE|LDR_CMD_DELETE|LDR_CMD_DELETEUSERFLASH|LDR_CMD_DEVICEINFO|LDR_CMD_FINDFIRST|LDR_CMD_FINDFIRSTMODULE|LDR_CMD_FINDNEXT|LDR_CMD_FINDNEXTMODULE|LDR_CMD_IOMAPREAD|LDR_CMD_IOMAPWRITE|LDR_CMD_OPENAPPENDDATA|LDR_CMD_OPENREAD|LDR_CMD_OPENREADLINEAR|LDR_CMD_OPENWRITE|LDR_CMD_OPENWRITEDATA|LDR_CMD_OPENWRITELINEAR|LDR_CMD_POLLCMD|LDR_CMD_POLLCMDLEN|LDR_CMD_READ|LDR_CMD_RENAMEFILE|LDR_CMD_RESIZEDATAFILE|LDR_CMD_SEEKFROMCURRENT|LDR_CMD_SEEKFROMEND|LDR_CMD_SEEKFROMSTART|LDR_CMD_SETBRICKNAME|LDR_CMD_VERSIONS|LDR_CMD_WRITE|LDR_ENDOFFILE|LDR_EOFEXPECTED|LDR_FILEEXISTS|LDR_FILEISBUSY|LDR_FILEISFULL|LDR_FILENOTFOUND|LDR_FILETX_CLOSEERROR|LDR_FILETX_DSTEXISTS|LDR_FILETX_SRCMISSING|LDR_FILETX_STREAMERROR|LDR_FILETX_TIMEOUT|LDR_HANDLEALREADYCLOSED|LDR_ILLEGALFILENAME|LDR_ILLEGALHANDLE|LDR_INPROGRESS|LDR_INVALIDSEEK|LDR_MODULENOTFOUND|LDR_NOLINEARSPACE|LDR_NOMOREFILES|LDR_NOMOREHANDLES|LDR_NOSPACE|LDR_NOTLINEARFILE|LDR_NOWRITEBUFFERS|LDR_OUTOFBOUNDARY|LDR_REQPIN|LDR_SUCCESS|LDR_UNDEFINEDERROR|LEGO_ADDR_EMETER|LEGO_ADDR_TEMP|LEGO_ADDR_US|LONG_MAX|LONG_MIN|LOWSPEED_CH_NOT_READY|LOWSPEED_COMMUNICATING|LOWSPEED_DATA_RECEIVED|LOWSPEED_DONE|LOWSPEED_ERROR|LOWSPEED_IDLE|LOWSPEED_INIT|LOWSPEED_LOAD_BUFFER|LOWSPEED_NO_ERROR|LOWSPEED_RECEIVING|LOWSPEED_RX_ERROR|LOWSPEED_TRANSMITTING|LOWSPEED_TX_ERROR|LR_COULD_NOT_SAVE|LR_ENTRY_REMOVED|LR_STORE_IS_FULL|LR_SUCCESS|LR_UNKNOWN_ADDR|LSREAD_NO_RESTART_1|LSREAD_NO_RESTART_2|LSREAD_NO_RESTART_3|LSREAD_NO_RESTART_4|LSREAD_NO_RESTART_MASK|LSREAD_RESTART_ALL|LSREAD_RESTART_NONE|MAILBOX1|MAILBOX10|MAILBOX2|MAILBOX3|MAILBOX4|MAILBOX5|MAILBOX6|MAILBOX7|MAILBOX8|MAILBOX9|MAX_BT_MSG_SIZE|MENUICONS|MENUICON_CENTER|MENUICON_LEFT|MENUICON_RIGHT|MENUTEXT|MIN_1|MOD_INPUT|MOD_OUTPUT|MS_1|MS_10|MS_100|MS_150|MS_2|MS_20|MS_200|MS_250|MS_3|MS_30|MS_300|MS_350|MS_4|MS_40|MS_400|MS_450|MS_5|MS_50|MS_500|MS_6|MS_60|MS_600|MS_7|MS_70|MS_700|MS_8|MS_80|MS_800|MS_9|MS_90|MS_900|MS_ADDR_ACCLNX|MS_ADDR_CMPSNX|MS_ADDR_DISTNX|MS_ADDR_IVSENS|MS_ADDR_LINELDR|MS_ADDR_MTRMUX|MS_ADDR_NRLINK|MS_ADDR_NXTCAM|MS_ADDR_NXTHID|MS_ADDR_NXTMMX|MS_ADDR_NXTSERVO|MS_ADDR_NXTSERVO_EM|MS_ADDR_PFMATE|MS_ADDR_PSPNX|MS_ADDR_RTCLOCK|MS_ADDR_RXMUX|MS_CMD_ADPA_OFF|MS_CMD_ADPA_ON|MS_CMD_DEENERGIZED|MS_CMD_ENERGIZED|NA|NBCCOMMON_H|NO_ERR|NO_OF_BTNS|NRLINK_CMD_2400|NRLINK_CMD_4800|NRLINK_CMD_FLUSH|NRLINK_CMD_IR_LONG|NRLINK_CMD_IR_SHORT|NRLINK_CMD_RUN_MACRO|NRLINK_CMD_SET_PF|NRLINK_CMD_SET_RCX|NRLINK_CMD_SET_TRAIN|NRLINK_CMD_TX_RAW|NRLINK_REG_BYTES|NRLINK_REG_DATA|NRLINK_REG_EEPROM|NULL|NXCDEFS_H|NXTHID_CMD_ASCII|NXTHID_CMD_DIRECT|NXTHID_CMD_TRANSMIT|NXTHID_MOD_LEFT_ALT|NXTHID_MOD_LEFT_CTRL|NXTHID_MOD_LEFT_GUI|NXTHID_MOD_LEFT_SHIFT|NXTHID_MOD_NONE|NXTHID_MOD_RIGHT_ALT|NXTHID_MOD_RIGHT_CTRL|NXTHID_MOD_RIGHT_GUI|NXTHID_MOD_RIGHT_SHIFT|NXTHID_REG_CMD|NXTHID_REG_DATA|NXTHID_REG_MODIFIER|NXTLL_CMD_BLACK|NXTLL_CMD_EUROPEAN|NXTLL_CMD_INVERT|NXTLL_CMD_POWERDOWN|NXTLL_CMD_POWERUP|NXTLL_CMD_RESET|NXTLL_CMD_SNAPSHOT|NXTLL_CMD_UNIVERSAL|NXTLL_CMD_USA|NXTLL_CMD_WHITE|NXTLL_REG_AVERAGE|NXTLL_REG_BLACKDATA|NXTLL_REG_BLACKLIMITS|NXTLL_REG_CALIBRATED|NXTLL_REG_CMD|NXTLL_REG_KD_FACTOR|NXTLL_REG_KD_VALUE|NXTLL_REG_KI_FACTOR|NXTLL_REG_KI_VALUE|NXTLL_REG_KP_FACTOR|NXTLL_REG_KP_VALUE|NXTLL_REG_RAWVOLTAGE|NXTLL_REG_RESULT|NXTLL_REG_SETPOINT|NXTLL_REG_STEERING|NXTLL_REG_WHITEDATA|NXTLL_REG_WHITELIMITS|NXTPM_CMD_RESET|NXTPM_REG_CAPACITY|NXTPM_REG_CMD|NXTPM_REG_CURRENT|NXTPM_REG_ERRORCOUNT|NXTPM_REG_GAIN|NXTPM_REG_MAXCURRENT|NXTPM_REG_MAXVOLTAGE|NXTPM_REG_MINCURRENT|NXTPM_REG_MINVOLTAGE|NXTPM_REG_POWER|NXTPM_REG_TIME|NXTPM_REG_TOTALPOWER|NXTPM_REG_USERGAIN|NXTPM_REG_VOLTAGE|NXTSERVO_CMD_EDIT1|NXTSERVO_CMD_EDIT2|NXTSERVO_CMD_GOTO|NXTSERVO_CMD_HALT|NXTSERVO_CMD_INIT|NXTSERVO_CMD_PAUSE|NXTSERVO_CMD_RESET|NXTSERVO_CMD_RESUME|NXTSERVO_EM_CMD_QUIT|NXTSERVO_EM_REG_CMD|NXTSERVO_EM_REG_EEPROM_END|NXTSERVO_EM_REG_EEPROM_START|NXTSERVO_POS_CENTER|NXTSERVO_POS_MAX|NXTSERVO_POS_MIN|NXTSERVO_QPOS_CENTER|NXTSERVO_QPOS_MAX|NXTSERVO_QPOS_MIN|NXTSERVO_REG_CMD|NXTSERVO_REG_S1_POS|NXTSERVO_REG_S1_QPOS|NXTSERVO_REG_S1_SPEED|NXTSERVO_REG_S2_POS|NXTSERVO_REG_S2_QPOS|NXTSERVO_REG_S2_SPEED|NXTSERVO_REG_S3_POS|NXTSERVO_REG_S3_QPOS|NXTSERVO_REG_S3_SPEED|NXTSERVO_REG_S4_POS|NXTSERVO_REG_S4_QPOS|NXTSERVO_REG_S4_SPEED|NXTSERVO_REG_S5_POS|NXTSERVO_REG_S5_QPOS|NXTSERVO_REG_S5_SPEED|NXTSERVO_REG_S6_POS|NXTSERVO_REG_S6_QPOS|NXTSERVO_REG_S6_SPEED|NXTSERVO_REG_S7_POS|NXTSERVO_REG_S7_QPOS|NXTSERVO_REG_S7_SPEED|NXTSERVO_REG_S8_POS|NXTSERVO_REG_S8_QPOS|NXTSERVO_REG_S8_SPEED|NXTSERVO_REG_VOLTAGE|NXTSERVO_SERVO_1|NXTSERVO_SERVO_2|NXTSERVO_SERVO_3|NXTSERVO_SERVO_4|NXTSERVO_SERVO_5|NXTSERVO_SERVO_6|NXTSERVO_SERVO_7|NXTSERVO_SERVO_8|NXTSE_ZONE_FRONT|NXTSE_ZONE_LEFT|NXTSE_ZONE_NONE|NXTSE_ZONE_RIGHT|OPARR_MAX|OPARR_MEAN|OPARR_MIN|OPARR_SORT|OPARR_STD|OPARR_SUM|OPARR_SUMSQR|OUT_A|OUT_AB|OUT_ABC|OUT_AC|OUT_B|OUT_BC|OUT_C|OUT_MODE_BRAKE|OUT_MODE_COAST|OUT_MODE_MOTORON|OUT_MODE_REGMETHOD|OUT_MODE_REGULATED|OUT_OPTION_HOLDATLIMIT|OUT_OPTION_RAMPDOWNTOLIMIT|OUT_REGMODE_IDLE|OUT_REGMODE_POS|OUT_REGMODE_SPEED|OUT_REGMODE_SYNC|OUT_REGOPTION_NO_SATURATION|OUT_RUNSTATE_HOLD|OUT_RUNSTATE_IDLE|OUT_RUNSTATE_RAMPDOWN|OUT_RUNSTATE_RAMPUP|OUT_RUNSTATE_RUNNING|PFMATE_CHANNEL_1|PFMATE_CHANNEL_2|PFMATE_CHANNEL_3|PFMATE_CHANNEL_4|PFMATE_CMD_GO|PFMATE_CMD_RAW|PFMATE_MOTORS_A|PFMATE_MOTORS_B|PFMATE_MOTORS_BOTH|PFMATE_REG_A_CMD|PFMATE_REG_A_SPEED|PFMATE_REG_B_CMD|PFMATE_REG_B_SPEED|PFMATE_REG_CHANNEL|PFMATE_REG_CMD|PFMATE_REG_MOTORS|PF_CHANNEL_1|PF_CHANNEL_2|PF_CHANNEL_3|PF_CHANNEL_4|PF_CMD_BRAKE|PF_CMD_FLOAT|PF_CMD_FWD|PF_CMD_REV|PF_CMD_STOP|PF_CST_CLEAR1_CLEAR2|PF_CST_CLEAR1_SET2|PF_CST_DECREMENT_PWM|PF_CST_FULL_FWD|PF_CST_FULL_REV|PF_CST_INCREMENT_PWM|PF_CST_SET1_CLEAR2|PF_CST_SET1_SET2|PF_CST_TOGGLE_DIR|PF_FUNC_CLEAR|PF_FUNC_NOCHANGE|PF_FUNC_SET|PF_FUNC_TOGGLE|PF_MODE_COMBO_DIRECT|PF_MODE_COMBO_PWM|PF_MODE_SINGLE_OUTPUT_CST|PF_MODE_SINGLE_OUTPUT_PWM|PF_MODE_SINGLE_PIN_CONT|PF_MODE_SINGLE_PIN_TIME|PF_MODE_TRAIN|PF_OUT_A|PF_OUT_B|PF_PIN_C1|PF_PIN_C2|PF_PWM_BRAKE|PF_PWM_FLOAT|PF_PWM_FWD1|PF_PWM_FWD2|PF_PWM_FWD3|PF_PWM_FWD4|PF_PWM_FWD5|PF_PWM_FWD6|PF_PWM_FWD7|PF_PWM_REV1|PF_PWM_REV2|PF_PWM_REV3|PF_PWM_REV4|PF_PWM_REV5|PF_PWM_REV6|PF_PWM_REV7|PI|PID_0|PID_1|PID_2|PID_3|PID_4|PID_5|PID_6|PID_7|POOL_MAX_SIZE|PROG_ABORT|PROG_ERROR|PROG_IDLE|PROG_OK|PROG_RESET|PROG_RUNNING|PSP_BTNSET1_DOWN|PSP_BTNSET1_L3|PSP_BTNSET1_LEFT|PSP_BTNSET1_R3|PSP_BTNSET1_RIGHT|PSP_BTNSET1_UP|PSP_BTNSET2_CIRCLE|PSP_BTNSET2_CROSS|PSP_BTNSET2_L1|PSP_BTNSET2_L2|PSP_BTNSET2_R1|PSP_BTNSET2_R2|PSP_BTNSET2_SQUARE|PSP_BTNSET2_TRIANGLE|PSP_CMD_ANALOG|PSP_CMD_DIGITAL|PSP_REG_BTNSET1|PSP_REG_BTNSET2|PSP_REG_XLEFT|PSP_REG_XRIGHT|PSP_REG_YLEFT|PSP_REG_YRIGHT|RADIANS_PER_DEGREE|RAND_MAX|RCX_OUT_A|RCX_OUT_AB|RCX_OUT_ABC|RCX_OUT_AC|RCX_OUT_B|RCX_OUT_BC|RCX_OUT_C|RCX_OUT_FLOAT|RCX_OUT_FULL|RCX_OUT_FWD|RCX_OUT_HALF|RCX_OUT_LOW|RCX_OUT_OFF|RCX_OUT_ON|RCX_OUT_REV|RCX_OUT_TOGGLE|RC_PROP_BTONOFF|RC_PROP_DEBUGGING|RC_PROP_SLEEP_TIMEOUT|RC_PROP_SOUND_LEVEL|RESET_ALL|RESET_BLOCKANDTACHO|RESET_BLOCK_COUNT|RESET_COUNT|RESET_NONE|RESET_ROTATION_COUNT|RFID_MODE_CONTINUOUS|RFID_MODE_SINGLE|RFID_MODE_STOP|ROTATE_QUEUE|S1|S2|S3|S4|SAMPLERATE_DEFAULT|SAMPLERATE_MAX|SAMPLERATE_MIN|SCHAR_MAX|SCHAR_MIN|SCOUT_FXR_ALARM|SCOUT_FXR_BUG|SCOUT_FXR_NONE|SCOUT_FXR_RANDOM|SCOUT_FXR_SCIENCE|SCOUT_LIGHT_OFF|SCOUT_LIGHT_ON|SCOUT_LR_AVOID|SCOUT_LR_IGNORE|SCOUT_LR_OFF_WHEN|SCOUT_LR_SEEK_DARK|SCOUT_LR_SEEK_LIGHT|SCOUT_LR_WAIT_FOR|SCOUT_MODE_POWER|SCOUT_MODE_STANDALONE|SCOUT_MR_CIRCLE_LEFT|SCOUT_MR_CIRCLE_RIGHT|SCOUT_MR_FORWARD|SCOUT_MR_LOOP_A|SCOUT_MR_LOOP_AB|SCOUT_MR_LOOP_B|SCOUT_MR_NO_MOTION|SCOUT_MR_ZIGZAG|SCOUT_SNDSET_ALARM|SCOUT_SNDSET_BASIC|SCOUT_SNDSET_BUG|SCOUT_SNDSET_NONE|SCOUT_SNDSET_RANDOM|SCOUT_SNDSET_SCIENCE|SCOUT_SOUND_1_BLINK|SCOUT_SOUND_2_BLINK|SCOUT_SOUND_COUNTER1|SCOUT_SOUND_COUNTER2|SCOUT_SOUND_ENTERSA|SCOUT_SOUND_ENTER_BRIGHT|SCOUT_SOUND_ENTER_DARK|SCOUT_SOUND_ENTER_NORMAL|SCOUT_SOUND_KEYERROR|SCOUT_SOUND_MAIL_RECEIVED|SCOUT_SOUND_NONE|SCOUT_SOUND_REMOTE|SCOUT_SOUND_SPECIAL1|SCOUT_SOUND_SPECIAL2|SCOUT_SOUND_SPECIAL3|SCOUT_SOUND_TIMER1|SCOUT_SOUND_TIMER2|SCOUT_SOUND_TIMER3|SCOUT_SOUND_TOUCH1_PRES|SCOUT_SOUND_TOUCH1_REL|SCOUT_SOUND_TOUCH2_PRES|SCOUT_SOUND_TOUCH2_REL|SCOUT_TGS_LONG|SCOUT_TGS_MEDIUM|SCOUT_TGS_SHORT|SCOUT_TR_AVOID|SCOUT_TR_IGNORE|SCOUT_TR_OFF_WHEN|SCOUT_TR_REVERSE|SCOUT_TR_WAIT_FOR|SCREENS|SCREEN_BACKGROUND|SCREEN_LARGE|SCREEN_MODE_CLEAR|SCREEN_MODE_RESTORE|SCREEN_SMALL|SEC_1|SEC_10|SEC_15|SEC_2|SEC_20|SEC_3|SEC_30|SEC_4|SEC_5|SEC_6|SEC_7|SEC_8|SEC_9|SEEK_CUR|SEEK_END|SEEK_SET|SENSOR_1|SENSOR_2|SENSOR_3|SENSOR_4|SENSOR_CELSIUS|SENSOR_COLORBLUE|SENSOR_COLORFULL|SENSOR_COLORGREEN|SENSOR_COLORNONE|SENSOR_COLORRED|SENSOR_EDGE|SENSOR_FAHRENHEIT|SENSOR_LIGHT|SENSOR_LOWSPEED|SENSOR_LOWSPEED_9V|SENSOR_MODE_BOOL|SENSOR_MODE_CELSIUS|SENSOR_MODE_EDGE|SENSOR_MODE_FAHRENHEIT|SENSOR_MODE_PERCENT|SENSOR_MODE_PULSE|SENSOR_MODE_RAW|SENSOR_MODE_ROTATION|SENSOR_NXTLIGHT|SENSOR_PULSE|SENSOR_ROTATION|SENSOR_SOUND|SENSOR_TOUCH|SENSOR_TYPE_COLORBLUE|SENSOR_TYPE_COLORFULL|SENSOR_TYPE_COLORGREEN|SENSOR_TYPE_COLORNONE|SENSOR_TYPE_COLORRED|SENSOR_TYPE_CUSTOM|SENSOR_TYPE_HIGHSPEED|SENSOR_TYPE_LIGHT|SENSOR_TYPE_LIGHT_ACTIVE|SENSOR_TYPE_LIGHT_INACTIVE|SENSOR_TYPE_LOWSPEED|SENSOR_TYPE_LOWSPEED_9V|SENSOR_TYPE_NONE|SENSOR_TYPE_ROTATION|SENSOR_TYPE_SOUND_DB|SENSOR_TYPE_SOUND_DBA|SENSOR_TYPE_TEMPERATURE|SENSOR_TYPE_TOUCH|SHRT_MAX|SHRT_MIN|SIZE_OF_BDADDR|SIZE_OF_BRICK_NAME|SIZE_OF_BTBUF|SIZE_OF_BT_CONNECT_TABLE|SIZE_OF_BT_DEVICE_TABLE|SIZE_OF_BT_NAME|SIZE_OF_BT_PINCODE|SIZE_OF_CLASS_OF_DEVICE|SIZE_OF_HSBUF|SIZE_OF_USBBUF|SIZE_OF_USBDATA|SOUND_CLICK|SOUND_DOUBLE_BEEP|SOUND_DOWN|SOUND_FAST_UP|SOUND_FLAGS_IDLE|SOUND_FLAGS_RUNNING|SOUND_FLAGS_UPDATE|SOUND_LOW_BEEP|SOUND_MODE_LOOP|SOUND_MODE_ONCE|SOUND_MODE_TONE|SOUND_STATE_FILE|SOUND_STATE_IDLE|SOUND_STATE_STOP|SOUND_STATE_TONE|SOUND_UP|SPECIALS|STATUSICONS|STATUSICON_BATTERY|STATUSICON_BLUETOOTH|STATUSICON_USB|STATUSICON_VM|STATUSTEXT|STAT_COMM_PENDING|STAT_MSG_EMPTY_MAILBOX|STEPICONS|STEPICON_1|STEPICON_2|STEPICON_3|STEPICON_4|STEPICON_5|STEPLINE|STOP_REQ|TEMP_FQ_1|TEMP_FQ_2|TEMP_FQ_4|TEMP_FQ_6|TEMP_OS_ONESHOT|TEMP_POL_HIGH|TEMP_POL_LOW|TEMP_REG_CONFIG|TEMP_REG_TEMP|TEMP_REG_THIGH|TEMP_REG_TLOW|TEMP_RES_10BIT|TEMP_RES_11BIT|TEMP_RES_12BIT|TEMP_RES_9BIT|TEMP_SD_CONTINUOUS|TEMP_SD_SHUTDOWN|TEMP_TM_COMPARATOR|TEMP_TM_INTERRUPT|TEXTLINES|TEXTLINE_1|TEXTLINE_2|TEXTLINE_3|TEXTLINE_4|TEXTLINE_5|TEXTLINE_6|TEXTLINE_7|TEXTLINE_8|TIMES_UP|TONE_A3|TONE_A4|TONE_A5|TONE_A6|TONE_A7|TONE_AS3|TONE_AS4|TONE_AS5|TONE_AS6|TONE_AS7|TONE_B3|TONE_B4|TONE_B5|TONE_B6|TONE_B7|TONE_C4|TONE_C5|TONE_C6|TONE_C7|TONE_CS4|TONE_CS5|TONE_CS6|TONE_CS7|TONE_D4|TONE_D5|TONE_D6|TONE_D7|TONE_DS4|TONE_DS5|TONE_DS6|TONE_DS7|TONE_E4|TONE_E5|TONE_E6|TONE_E7|TONE_F4|TONE_F5|TONE_F6|TONE_F7|TONE_FS4|TONE_FS5|TONE_FS6|TONE_FS7|TONE_G4|TONE_G5|TONE_G6|TONE_G7|TONE_GS4|TONE_GS5|TONE_GS6|TONE_GS7|TOPLINE|TRAIN_CHANNEL_1|TRAIN_CHANNEL_2|TRAIN_CHANNEL_3|TRAIN_CHANNEL_ALL|TRAIN_FUNC_DECR_SPEED|TRAIN_FUNC_INCR_SPEED|TRAIN_FUNC_STOP|TRAIN_FUNC_TOGGLE_LIGHT|TRUE|UCHAR_MAX|UF_PENDING_UPDATES|UF_UPDATE_MODE|UF_UPDATE_PID_VALUES|UF_UPDATE_RESET_BLOCK_COUNT|UF_UPDATE_RESET_COUNT|UF_UPDATE_RESET_ROTATION_COUNT|UF_UPDATE_SPEED|UF_UPDATE_TACHO_LIMIT|UINT_MAX|UI_BT_CONNECT_REQUEST|UI_BT_ERROR_ATTENTION|UI_BT_PIN_REQUEST|UI_BT_STATE_CONNECTED|UI_BT_STATE_OFF|UI_BT_STATE_VISIBLE|UI_BUTTON_ENTER|UI_BUTTON_EXIT|UI_BUTTON_LEFT|UI_BUTTON_NONE|UI_BUTTON_RIGHT|UI_FLAGS_BUSY|UI_FLAGS_DISABLE_EXIT|UI_FLAGS_DISABLE_LEFT_RIGHT_ENTER|UI_FLAGS_ENABLE_STATUS_UPDATE|UI_FLAGS_EXECUTE_LMS_FILE|UI_FLAGS_REDRAW_STATUS|UI_FLAGS_RESET_SLEEP_TIMER|UI_FLAGS_UPDATE|UI_STATE_BT_ERROR|UI_STATE_CONNECT_REQUEST|UI_STATE_DRAW_MENU|UI_STATE_ENTER_PRESSED|UI_STATE_EXECUTE_FILE|UI_STATE_EXECUTING_FILE|UI_STATE_EXIT_PRESSED|UI_STATE_INIT_DISPLAY|UI_STATE_INIT_INTRO|UI_STATE_INIT_LOW_BATTERY|UI_STATE_INIT_MENU|UI_STATE_INIT_WAIT|UI_STATE_LEFT_PRESSED|UI_STATE_LOW_BATTERY|UI_STATE_NEXT_MENU|UI_STATE_RIGHT_PRESSED|UI_STATE_TEST_BUTTONS|UI_VM_IDLE|UI_VM_RESET1|UI_VM_RESET2|UI_VM_RUN_FREE|UI_VM_RUN_PAUSE|UI_VM_RUN_SINGLE|ULONG_MAX|USB_CMD_READY|USB_PROTOCOL_OVERHEAD|USHRT_MAX|US_CMD_CONTINUOUS|US_CMD_EVENTCAPTURE|US_CMD_OFF|US_CMD_SINGLESHOT|US_CMD_WARMRESET|US_REG_ACTUAL_ZERO|US_REG_CM_INTERVAL|US_REG_FACTORY_ACTUAL_ZERO|US_REG_FACTORY_SCALE_DIVISOR|US_REG_FACTORY_SCALE_FACTOR|US_REG_MEASUREMENT_UNITS|US_REG_SCALE_DIVISOR|US_REG_SCALE_FACTOR)\b/
                , token: "def"
        }
        , {
                regex: /[A-z_][A-z0-9_]+ *(?=\()/
                , token: "def"
        }
    , // A next property will cause the mode to move to a different state
            {
                regex: /\/\*/
                , token: "comment"
                , next: "comment"
    }
    , {
                regex: /[-+\/*=<>!]+/
                , token: "operator"
    }, // indent and dedent properties guide autoindentation
            {
                regex: /[\{\[\(]/
                , indent: true
    }
    , {
                regex: /[\}\]\)]/
                , dedent: true
    }], // The multi-line comment state.
        comment: [
  ], // The meta property contains global information about the mode. It
        // can contain properties like lineComment, which are supported by
        // all modes, and also directives like dontIndentStates, which are
        // specific to simple modes.
        meta: {
            dontIndentStates: ["comment"]
            , lineComment: "//"
        }
    });
    LanguageManager.defineLanguage("nxc", {
        name: "NXC"
        , mode: "nxc"
        , fileExtensions: ["nxc"]
        , blockComment: ["/*", "*/"]
        , lineComment: ["//"]
    });
    /**
     * @constructor
     */
    function WordHints() {
        this.lastLine = 0;
        this.lastFileName = "";
        this.cachedMatches = [];
        this.cachedWords = [];
        this.tokenDefinition = /[a-zA-Z][a-zA-Z0-9_]{2,}/g;
        this.currentSymbol = /\b[A-z0-9_]+$/g;
    }
    /**
     * 
     * @param {Editor} editor 
     * A non-null editor object for the active window.
     *
     * @param {String} implicitChar 
     * Either null, if the hinting request was explicit, or a single character
     * that represents the last insertion and that indicates an implicit
     * hinting request.
     *
     * @return {Boolean} 
     * Determines whether the current provider is able to provide hints for
     * the given editor context and, in case implicitChar is non- null,
     * whether it is appropriate to do so.
     */
    WordHints.prototype.hasHints = function (editor, implicitChar) {
        this.editor = editor;
        var cursor = this.editor.getCursorPos();
        if (cursor.line != this.lastLine) {
            var rawWordList = nxcKeywords.split("\n");
            this.cachedWords = [];
            for (var i in rawWordList) {
                var word = rawWordList[i];
                if (this.cachedWords.indexOf(word) == -1) { //push new words into cached word list
                    this.cachedWords.push(word);
                }
            }
        }
        this.lastLine = cursor.line;
        // after user typed more than 2 chars
        var lineBeginning = {
            line: cursor.line
            , ch: 0
        };
        var textBeforeCursor = this.editor.document.getRange(lineBeginning, cursor);
        var symbolBeforeCursorArray = textBeforeCursor.match(this.currentSymbol); //get last word
        if (symbolBeforeCursorArray) { //user is typing
            // find if the half-inputted word is in the list
            symbolBeforeCursorArray[0] = symbolBeforeCursorArray[0].toLowerCase();
            for (var i in this.cachedWords) {
                //if (this.cachedWordList[i].indexOf(symbolBeforeCursorArray[0]) == 0) { //matches
                if (this.cachedWords[i].toLowerCase().indexOf(symbolBeforeCursorArray[0]) !== -1) { //matches
                    return true;
                }
            }
        }
        return false;
    };
    /**
     * Returns a list of availble CSS propertyname or -value hints if possible for the current
     * editor context. 
     * 
     * @param {Editor} implicitChar 
     * Either null, if the hinting request was explicit, or a single character
     * that represents the last insertion and that indicates an implicit
     * hinting request.
     *
     * @return {jQuery.Deferred|{
     *              hints: Array.<string|jQueryObject>,
     *              match: string,
     *              selectInitial: boolean,
     *              handleWideResults: boolean}}
     * Null if the provider wishes to end the hinting session. Otherwise, a
     * response object that provides:
     * 1. a sorted array hints that consists of strings
     * 2. a string match that is used by the manager to emphasize matching
     *    substrings when rendering the hint list
     * 3. a boolean that indicates whether the first result, if one exists,
     *    should be selected by default in the hint list window.
     * 4. handleWideResults, a boolean (or undefined) that indicates whether
     *    to allow result string to stretch width of display.
     */
    WordHints.prototype.getHints = function (implicitChar) {
        var cursor = this.editor.getCursorPos();
        var lineBeginning = {
            line: cursor.line
            , ch: 0
        };
        var preText = this.editor.document.getRange(lineBeginning, cursor);
        var preTextArray = preText.match(this.currentSymbol);
        var hintList = [];
        var caseStartHints = [];
        var caseInStartHints = [];
        var caseSubHints = [];
        var caseInSubHints = [];
        var lowerCaseSymbol = preTextArray[0].toLowerCase();
        for (var i in this.cachedWords) {
            if (this.cachedWords[i].startsWith(preTextArray[0])) { //starts with the substring, case sensitive
                caseStartHints.push(this.cachedWords[i]);
            }
            else if (this.cachedWords[i].toLowerCase().startsWith(lowerCaseSymbol)) { //starts with the substring, case insensitive
                caseInStartHints.push(this.cachedWords[i]);
            }
            else if (this.cachedWords[i].indexOf(preTextArray[0]) !== -1) { //contains the substring, case sensitive
                caseSubHints.push(this.cachedWords[i]);
            }
            else if (this.cachedWords[i].toLowerCase().indexOf(lowerCaseSymbol) !== -1) { //contains the substring, case insensitive
                caseInSubHints.push(this.cachedWords[i]);
            }
        }
        hintList = caseStartHints.concat(caseInStartHints, caseSubHints, caseInSubHints);
        return {
            hints: hintList
            , match: preTextArray[0]
            , selectInitial: true
            , handleWideResults: false
        };
    };
    /**
     * Complete the word
     * 
     * @param {String} hint 
     * The hint to be inserted into the editor context.
     * 
     * @return {Boolean} 
     * Indicates whether the manager should follow hint insertion with an
     * additional explicit hint request.
     */
    WordHints.prototype.insertHint = function (hint) {
        var cursor = this.editor.getCursorPos();
        var lineBeginning = {
            line: cursor.line
            , ch: 0
        };
        var preText = this.editor.document.getRange(lineBeginning, cursor);
        var indexOfTheSymbol = preText.search(this.currentSymbol);
        var replaceStart = {
            line: cursor.line
            , ch: indexOfTheSymbol
        };
        this.editor.document.replaceRange(hint, replaceStart, cursor);
        if (hint.endsWith("()")) {
            var newPos = this.editor.getCursorPos();
            this.editor.setCursorPos(newPos.line, newPos.ch - 1);
        }
        return false;
    };
    /**
     * Insert hint on TAB key press
     *
     */
    WordHints.prototype.insertHintOnTab = function () {
        return true;
    }
    AppInit.appReady(function () {
        var wordHints = new WordHints();
        CodeHintManager.registerHintProvider(wordHints, ["nxc"], 0);
        //        alert(FileUtils.getNativeModuleDirectoryPath(module));
        $("<a href='#' id='runNXC' title='Upload NXC'><img src=\"" + FileUtils.getNativeModuleDirectoryPath(module) + "/images/run.png\"></img></a>").appendTo("#main-toolbar div.buttons");
        $("#runNXC").on("click", function () {
            var nxcPath = EditorManager.getActiveEditor().document.file.fullPath;
            var indexOfPeriod = nxcPath.lastIndexOf(".");
            if (indexOfPeriod !== -1) { //file has extension
                if (nxcPath.substring(indexOfPeriod + 1).toLowerCase() === "nxc") { //file is nxc
                    nxcPath = nxcPath.replace(" ", "\\ ");
                    var dialogObj = $($.parseHTML(runDialogHTML));
                    //dialogObj.find("#dialog-message").prepend("kutaids");
                    var openedDialog = Dialogs.showModalDialogUsingTemplate(dialogObj, true);
                    fileExists("/System/Library/Extensions/Fantom.kext", function (exists) {
                        if (exists) {
                            fileExists("/Library/StartupItems/Fantom/Fantom", function (exists2) {
                                if (exists2) {
                                    dialogObj.find("#installation-status").html("You seem to have installed the required extension<br>Choose your option below");
                                    dialogObj.find("#installation-status").css("color", "#00ff00");
                                }
                                else {
                                    dialogObj.find("#installation-status").html("You don't seem to have installed the required extension<br><a href=\"https://lc-www-live-s.legocdn.com/r/www/r/mindstorms/-/media/franchises/mindstorms%202014/downloads/firmware%20and%20software/nxt%20software/nxt%20fantom%20drivers%20v120.zip?l.r2=-964392510\"><u>Click here to install it</u></a>");
                                    dialogObj.find("#installation-status").css("color", "#ff0000");
                                    dialogObj.find("#only-upload").attr("disabled", "true");
                                    dialogObj.find("#upload-run").attr("disabled", "true");
                                }
                            });
                        }
                        else {
                            dialogObj.find("#installation-status").html("You don't seem to have installed the required extension<br><a href=\"https://lc-www-live-s.legocdn.com/r/www/r/mindstorms/-/media/franchises/mindstorms%202014/downloads/firmware%20and%20software/nxt%20software/nxt%20fantom%20drivers%20v120.zip?l.r2=-964392510\"><u>Click here to install it</u></a>");
                            dialogObj.find("#installation-status").css("color", "#ff0000");
                            dialogObj.find("#only-upload").attr("disabled", "true");
                            dialogObj.find("#upload-run").attr("disabled", "true");
                        }
                    });
                    dialogObj.find("#cancel-upload").click(function () {
                        openedDialog.close();
                    });
                    dialogObj.find("#only-upload").click(function () {
                        executeCommand("./nbc -d " + nxcPath);
                    });
                    dialogObj.find("#upload-run").click(function () {
                        executeCommand("./nbc -r " + nxcPath);
                    });
                    /*$(document).keyup(function (event) {
                        alert(event.keyCode);
                        if (event.key === "Enter") {
                            dialogObj.find("#upload-run").click();
                        }
                        else if (event.key === "Escape") {
                            openedDialog.close();
                        }
                    });*/
                    //executeCommand("./nbc -r " + nxcPath);
                }
            }
        });
    });

    function executeCommand(cmd) {
        execCmdDomain.exec("execCmd", extensionFolder, cmd).done(function (out) {
            if (out.stdout) {
                alert(out.stdout);
            }
            console.log("[brackets-nxc] Successfully ran execCmd");
        }).fail(function (err) {
            if (err.stderr) {
                console.log("[brackets-nxc] Terminal command failed: ", err.stderr);
                displayError(err.stderr);
            }
            else if (err.stdout) {
                console.log("[brackets-nxc] Terminal command failed: ", err.stdout);
                displayError(err.stdout);
            }
            else {
                console.error("[brackets-nxc] Failed to run execCmd: ", err.err);
                displayError(err.err);
            }
        });
    }

    function fileExists(path, callback) {
        checkFileDomain.exec("checkFile", path).done(function (result) {
            callback(result);
            console.log("[brackets-nxc] Successfully ran checkFile");
        }).fail(function (err) {
            console.error("[brackets-nxc] Failed to run checkFile: ", err);
        });
    }

    function displayError(errString) {
        var dialogObj = $($.parseHTML(errorDialogHTML));
        var openedDialog = Dialogs.showModalDialogUsingTemplate(dialogObj, true);
        dialogObj.find("#console-output").html(errString.replace(/(?:\r\n|\r|\n)/g, "<br>"));
    }
    /*EditorManager.on("activeEditorChange", function () {
        var jsPath = EditorManager.getActiveEditor().document.file.fullPath;
        var indexOfPeriod = jsPath.lastIndexOf(".");
        if (indexOfPeriod !== -1) { //file has extension
            if (jsPath.substring(indexOfPeriod + 1).toLowerCase() === "nxc") {
                $("#runNXC").show();
            }
            else {
                $("#runNXC").hide();
            }
        }
        else {
            $("#runNXC").hide();
        }
    });*/
});